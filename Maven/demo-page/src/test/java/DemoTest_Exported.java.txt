// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class DemoTest_Exported {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    //driver.quit();
  }
  public void subTest1Text() {
    // Test 1
    // Assignment: Fill in the Text Input Field with "MAPS is boring" and verify it filled in correctly
    driver.findElement(By.id("myTextInput")).sendKeys("MAPS is boring");
    {
      String value = driver.findElement(By.id("myTextInput")).getAttribute("value");
      System.out.println(value.toString());  
      assertThat(value, is("MAPS is boring"));
    }
  }
  public void subTest2Color() {
    // Test 2
    // Assignment: Grab the rgb color from "HTML SVG with rect" and populate a variable with the result.
    {
      WebElement element = driver.findElement(By.id("svgRect"));
      String attribute = element.getAttribute("fill");
      vars.put("color", attribute);
    }
    System.out.println(vars.get("color").toString());
  }
  public void subTest3Checkbox() {
    // Test 3
    // Assignment: Toggle the CheckBox in the iFrame and confirm it is checked.
    {
      WebElement element = driver.findElement(By.id("myFrame3"));
      driver.switchTo().frame(element);
    }
    driver.findElement(By.id("checkBox6")).click();
    {
      String value = driver.findElement(By.id("checkBox6")).getAttribute("value");
      System.out.println(value.toString());  
      assertThat(value, is("on"));
    }
    driver.switchTo().defaultContent();
  }
  public void subTest4Dropdown() {
    // Test 4
    // Assignment: Change Select Dropdown to "Set to 50%" and Assert the HTML meter changes to what is selected.
    {
      WebElement dropdown = driver.findElement(By.id("mySelect"));
      dropdown.findElement(By.xpath("//option[. = 'Set to 50%']")).click();
    }
    driver.findElement(By.cssSelector("option:nth-child(2)")).click();
    {
      WebElement element = driver.findElement(By.id("meterBar"));
      String attribute = element.getAttribute("value");
      vars.put("amountFilled", attribute);
    }
    System.out.println(vars.get("amountFilled").toString());
    assertEquals(vars.get("amountFilled").toString(), "0.5");
  }
  
  @Test
  public void demo() {
    //driver.get("https://seleniumbase.io/demo_page");
    //driver.manage().window().setSize(new Dimension(1012, 648));
    //subTest1Text();
    //subTest2Color();
    //subTest3Checkbox();
    //subTest4Dropdown();
  }
}
